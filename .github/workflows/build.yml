name: Build DevBuild
on:
    workflow_run:
        workflows: ["Upstream Sync"]
        branches: [main]
        types:
            - completed
    push:
        branches:
            - main
        paths:
            - .github/workflows/build.yml
            - src/**
            - browser/**
            - scripts/build/**
            - package.json
            - pnpm-lock.yaml
    workflow_dispatch:
env:
    FORCE_COLOR: true

jobs:
    Build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - uses: pnpm/action-setup@v3 # Install pnpm using packageManager key in package.json

            - name: Use Node.js 20
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build
              run: pnpm build --standalone

            - name: Clean up obsolete files
              run: |
                  rm -rf dist/*-unpacked dist/vendor Vencord.user.css vencordDesktopRenderer.css vencordDesktopRenderer.css.map

            - name: Get some values needed for the release
              id: release_values
              run: |
                  echo "release_tag=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Check existing release
              id: check_release
              if: github.repository == 'mordertehmod/Vencord'
              continue-on-error: true
              run: |
                gh release view devbuild
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
            - name: Create release if needed
              if: github.repository == 'mordertehmod/Vencord' && steps.check_release.outcome == 'failure'
              run: |
                gh release create devbuild --title "DevBuild ${{ env.release_tag }}" --notes "Development build ${{ env.release_tag }}" --prerelease
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                RELEASE_TAG: ${{ env.release_tag }}
            
            - name: Upload DevBuild as release
              if: github.repository == 'mordertehmod/Vencord'
              run: |
                gh release upload devbuild --clobber dist/*
                gh release edit devbuild --title "DevBuild $RELEASE_TAG"
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                RELEASE_TAG: ${{ env.release_tag }}
